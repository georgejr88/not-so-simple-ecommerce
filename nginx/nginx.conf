events {
	worker_connections 768;
}
http {

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	client_body_timeout	10;
	client_header_timeout 10;
	send_timeout 10;

	server_tokens off;

	server {

		listen *:44300 ssl;
		server_name loadbalancer.internal;
		ssl_certificate /etc/nginx/certs/service.crt;
		ssl_certificate_key /etc/nginx/certs/service.key;

		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_prefer_server_ciphers	on;
		ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
		ssl_ecdh_curve secp384r1;
		ssl_session_cache shared:SSL:50m;
		ssl_session_timeout 1d;
		ssl_session_tickets off;

		proxy_buffer_size 128k;
		proxy_buffers 4 256k;
		proxy_busy_buffers_size 256k;
		large_client_header_buffers	4 16k;

		add_header X-Content-Type-Options "nosniff";
		add_header X-Frame-Options "SAMEORIGIN";

		location ^~/main/		{
			resolver 127.0.0.11 valid=30s;
			set $upstream_host not-so-simple-ecommerce.main;
			proxy_pass https://$upstream_host;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection keep-alive;
			proxy_set_header Host $host:$server_port;
			proxy_cache_bypass $http_upgrade;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-URL-SCHEME https;
		}

		location ^~/healthchecks/		{
			resolver 127.0.0.11 valid=30s;
			set $upstream_host not-so-simple-ecommerce.health-checker;
			proxy_pass https://$upstream_host;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection keep-alive;
			proxy_set_header Host $host:$server_port;
			proxy_cache_bypass $http_upgrade;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-URL-SCHEME https;
		}

		location ^~/order/		{
			resolver 127.0.0.11 valid=30s;
			set $upstream_host not-so-simple-ecommerce.order;
			proxy_pass https://$upstream_host;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection keep-alive;
			proxy_set_header Host $host:$server_port;
			proxy_cache_bypass $http_upgrade;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-URL-SCHEME https;
		}

        location ^~/identity/		{
			resolver 127.0.0.11 valid=30s;
			set $upstream_host not-so-simple-ecommerce.identity-server;
			proxy_pass https://$upstream_host;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection keep-alive;
			proxy_set_header Host $host:$server_port;
			proxy_cache_bypass $http_upgrade;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-URL-SCHEME https;
		}

        
		location ^~/notificator/		{
			resolver 127.0.0.11 valid=30s;
			set $upstream_host not-so-simple-ecommerce.notificator;
			proxy_pass https://$upstream_host;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection keep-alive;
			proxy_set_header Host $host:$server_port;
			proxy_cache_bypass $http_upgrade;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-URL-SCHEME https;
		}

                
		location ^~/invoice/		{
			resolver 127.0.0.11 valid=30s;
			set $upstream_host not-so-simple-ecommerce.invoice-generator;
			proxy_pass https://$upstream_host;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection keep-alive;
			proxy_set_header Host $host:$server_port;
			proxy_cache_bypass $http_upgrade;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-URL-SCHEME https;
		}

		location /ws {
			set $upstream_host host.docker.internal:3000;
			proxy_pass http://$upstream_host;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";
		}

		location /		{
			resolver 127.0.0.11 valid=30s;
			set $upstream_host host.docker.internal:3000;
			proxy_pass http://$upstream_host;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection keep-alive;
			proxy_set_header Host $host:$server_port;
			proxy_cache_bypass $http_upgrade;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-URL-SCHEME http;
		}
	}
}